// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.23.4
// source: model.proto

package vila_bot

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RoomType int32

const (
	RoomType_RoomTypeInvalid   RoomType = 0
	RoomType_RoomTypeChatRoom  RoomType = 1 // 聊天放假
	RoomType_RoomTypePostRoom  RoomType = 2 // 帖子房间
	RoomType_RoomTypeSceneRoom RoomType = 3 // 场景房间
)

// Enum value maps for RoomType.
var (
	RoomType_name = map[int32]string{
		0: "RoomTypeInvalid",
		1: "RoomTypeChatRoom",
		2: "RoomTypePostRoom",
		3: "RoomTypeSceneRoom",
	}
	RoomType_value = map[string]int32{
		"RoomTypeInvalid":   0,
		"RoomTypeChatRoom":  1,
		"RoomTypePostRoom":  2,
		"RoomTypeSceneRoom": 3,
	}
)

func (x RoomType) Enum() *RoomType {
	p := new(RoomType)
	*p = x
	return p
}

func (x RoomType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomType) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[0].Descriptor()
}

func (RoomType) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[0]
}

func (x RoomType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomType.Descriptor instead.
func (RoomType) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{0}
}

type ObjectName int32

const (
	ObjectName_UnknowObjectName ObjectName = 0
	ObjectName_Text             ObjectName = 1 // 文本消息
	ObjectName_Post             ObjectName = 2 // 帖子消息
)

// Enum value maps for ObjectName.
var (
	ObjectName_name = map[int32]string{
		0: "UnknowObjectName",
		1: "Text",
		2: "Post",
	}
	ObjectName_value = map[string]int32{
		"UnknowObjectName": 0,
		"Text":             1,
		"Post":             2,
	}
)

func (x ObjectName) Enum() *ObjectName {
	p := new(ObjectName)
	*p = x
	return p
}

func (x ObjectName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObjectName) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[1].Descriptor()
}

func (ObjectName) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[1]
}

func (x ObjectName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObjectName.Descriptor instead.
func (ObjectName) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{1}
}

type RobotEvent_EventType int32

const (
	RobotEvent_UnknowRobotEventType RobotEvent_EventType = 0
	RobotEvent_JoinVilla            RobotEvent_EventType = 1 // 加入大别野
	RobotEvent_SendMessage          RobotEvent_EventType = 2 // 发送消息
	RobotEvent_CreateRobot          RobotEvent_EventType = 3 // 大别野添加机器人实例
	RobotEvent_DeleteRobot          RobotEvent_EventType = 4 // 大别野删除机器人实例
	RobotEvent_AddQuickEmoticon     RobotEvent_EventType = 5 // 表情表态
	RobotEvent_AuditCallback        RobotEvent_EventType = 6 // 审核结果回调
	RobotEvent_ClickMsgComponent    RobotEvent_EventType = 7 // 点击消息组件
)

// Enum value maps for RobotEvent_EventType.
var (
	RobotEvent_EventType_name = map[int32]string{
		0: "UnknowRobotEventType",
		1: "JoinVilla",
		2: "SendMessage",
		3: "CreateRobot",
		4: "DeleteRobot",
		5: "AddQuickEmoticon",
		6: "AuditCallback",
		7: "ClickMsgComponent",
	}
	RobotEvent_EventType_value = map[string]int32{
		"UnknowRobotEventType": 0,
		"JoinVilla":            1,
		"SendMessage":          2,
		"CreateRobot":          3,
		"DeleteRobot":          4,
		"AddQuickEmoticon":     5,
		"AuditCallback":        6,
		"ClickMsgComponent":    7,
	}
)

func (x RobotEvent_EventType) Enum() *RobotEvent_EventType {
	p := new(RobotEvent_EventType)
	*p = x
	return p
}

func (x RobotEvent_EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RobotEvent_EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[2].Descriptor()
}

func (RobotEvent_EventType) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[2]
}

func (x RobotEvent_EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RobotEvent_EventType.Descriptor instead.
func (RobotEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{3, 0}
}

type RobotEvent_ExtendData_AuditCallbackInfo_AuditResult int32

const (
	RobotEvent_ExtendData_AuditCallbackInfo_None   RobotEvent_ExtendData_AuditCallbackInfo_AuditResult = 0
	RobotEvent_ExtendData_AuditCallbackInfo_Pass   RobotEvent_ExtendData_AuditCallbackInfo_AuditResult = 1
	RobotEvent_ExtendData_AuditCallbackInfo_Reject RobotEvent_ExtendData_AuditCallbackInfo_AuditResult = 2
)

// Enum value maps for RobotEvent_ExtendData_AuditCallbackInfo_AuditResult.
var (
	RobotEvent_ExtendData_AuditCallbackInfo_AuditResult_name = map[int32]string{
		0: "None",
		1: "Pass",
		2: "Reject",
	}
	RobotEvent_ExtendData_AuditCallbackInfo_AuditResult_value = map[string]int32{
		"None":   0,
		"Pass":   1,
		"Reject": 2,
	}
)

func (x RobotEvent_ExtendData_AuditCallbackInfo_AuditResult) Enum() *RobotEvent_ExtendData_AuditCallbackInfo_AuditResult {
	p := new(RobotEvent_ExtendData_AuditCallbackInfo_AuditResult)
	*p = x
	return p
}

func (x RobotEvent_ExtendData_AuditCallbackInfo_AuditResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RobotEvent_ExtendData_AuditCallbackInfo_AuditResult) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[3].Descriptor()
}

func (RobotEvent_ExtendData_AuditCallbackInfo_AuditResult) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[3]
}

func (x RobotEvent_ExtendData_AuditCallbackInfo_AuditResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RobotEvent_ExtendData_AuditCallbackInfo_AuditResult.Descriptor instead.
func (RobotEvent_ExtendData_AuditCallbackInfo_AuditResult) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{3, 0, 5, 0}
}

type RobotTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                      // 机器人模板 id
	Name                     string                         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                  // 机器人名称
	Desc                     string                         `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`                                                                                  // 机器人描述
	Icon                     string                         `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`                                                                                  // 机器人 icon
	Commands                 []*RobotTemplate_Command       `protobuf:"bytes,5,rep,name=commands,proto3" json:"commands,omitempty"`                                                                          // 指令列表
	CustomSettings           []*RobotTemplate_CustomSetting `protobuf:"bytes,6,rep,name=custom_settings,json=customSettings,proto3" json:"custom_settings,omitempty"`                                        // 自定义设置项
	IsAllowedAddToOtherVilla bool                           `protobuf:"varint,7,opt,name=is_allowed_add_to_other_villa,json=isAllowedAddToOtherVilla,proto3" json:"is_allowed_add_to_other_villa,omitempty"` // 是否允许添加到其他大别野
}

func (x *RobotTemplate) Reset() {
	*x = RobotTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotTemplate) ProtoMessage() {}

func (x *RobotTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotTemplate.ProtoReflect.Descriptor instead.
func (*RobotTemplate) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{0}
}

func (x *RobotTemplate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RobotTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RobotTemplate) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RobotTemplate) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *RobotTemplate) GetCommands() []*RobotTemplate_Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *RobotTemplate) GetCustomSettings() []*RobotTemplate_CustomSetting {
	if x != nil {
		return x.CustomSettings
	}
	return nil
}

func (x *RobotTemplate) GetIsAllowedAddToOtherVilla() bool {
	if x != nil {
		return x.IsAllowedAddToOtherVilla
	}
	return false
}

type Robot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template *RobotTemplate `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`               // 所属机器人模板
	VillaId  uint64         `protobuf:"varint,2,opt,name=villa_id,json=villaId,proto3" json:"villa_id,omitempty"` // 大别野 id
}

func (x *Robot) Reset() {
	*x = Robot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Robot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Robot) ProtoMessage() {}

func (x *Robot) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Robot.ProtoReflect.Descriptor instead.
func (*Robot) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{1}
}

func (x *Robot) GetTemplate() *RobotTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *Robot) GetVillaId() uint64 {
	if x != nil {
		return x.VillaId
	}
	return 0
}

type QuoteMessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content          string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`             // 消息内容
	MsgUid           string `protobuf:"bytes,2,opt,name=msg_uid,json=msgUid,proto3" json:"msg_uid,omitempty"` // 消息msg_uid
	SendAt           int64  `protobuf:"varint,3,opt,name=send_at,json=sendAt,proto3" json:"send_at,omitempty"`
	MsgType          string `protobuf:"bytes,4,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`                              // 消息类型
	BotMsgId         string `protobuf:"bytes,5,opt,name=bot_msg_id,json=botMsgId,proto3" json:"bot_msg_id,omitempty"`                         // 如果是机器人消息，则该字段不为空字符串
	FromUserId       uint64 `protobuf:"varint,6,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`                  // 发送者id
	FromUserIdStr    string `protobuf:"bytes,7,opt,name=from_user_id_str,json=fromUserIdStr,proto3" json:"from_user_id_str,omitempty"`        // 发送者id（string）
	FromUserNickname string `protobuf:"bytes,8,opt,name=from_user_nickname,json=fromUserNickname,proto3" json:"from_user_nickname,omitempty"` // 发送者昵称
}

func (x *QuoteMessageInfo) Reset() {
	*x = QuoteMessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteMessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteMessageInfo) ProtoMessage() {}

func (x *QuoteMessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteMessageInfo.ProtoReflect.Descriptor instead.
func (*QuoteMessageInfo) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{2}
}

func (x *QuoteMessageInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *QuoteMessageInfo) GetMsgUid() string {
	if x != nil {
		return x.MsgUid
	}
	return ""
}

func (x *QuoteMessageInfo) GetSendAt() int64 {
	if x != nil {
		return x.SendAt
	}
	return 0
}

func (x *QuoteMessageInfo) GetMsgType() string {
	if x != nil {
		return x.MsgType
	}
	return ""
}

func (x *QuoteMessageInfo) GetBotMsgId() string {
	if x != nil {
		return x.BotMsgId
	}
	return ""
}

func (x *QuoteMessageInfo) GetFromUserId() uint64 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

func (x *QuoteMessageInfo) GetFromUserIdStr() string {
	if x != nil {
		return x.FromUserIdStr
	}
	return ""
}

func (x *QuoteMessageInfo) GetFromUserNickname() string {
	if x != nil {
		return x.FromUserNickname
	}
	return ""
}

type RobotEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Robot      *Robot                 `protobuf:"bytes,1,opt,name=robot,proto3" json:"robot,omitempty"`                                   // 事件相关机器人
	Type       RobotEvent_EventType   `protobuf:"varint,2,opt,name=type,proto3,enum=vila_bot.RobotEvent_EventType" json:"type,omitempty"` // 事件类型
	ExtendData *RobotEvent_ExtendData `protobuf:"bytes,3,opt,name=extend_data,json=extendData,proto3" json:"extend_data,omitempty"`       // 事件拓展信息
	CreatedAt  int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`         // 事件发生时间
	Id         string                 `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`                                         // 事件 id
	SendAt     int64                  `protobuf:"varint,6,opt,name=send_at,json=sendAt,proto3" json:"send_at,omitempty"`                  // 事件消息投递时间
}

func (x *RobotEvent) Reset() {
	*x = RobotEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotEvent) ProtoMessage() {}

func (x *RobotEvent) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotEvent.ProtoReflect.Descriptor instead.
func (*RobotEvent) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{3}
}

func (x *RobotEvent) GetRobot() *Robot {
	if x != nil {
		return x.Robot
	}
	return nil
}

func (x *RobotEvent) GetType() RobotEvent_EventType {
	if x != nil {
		return x.Type
	}
	return RobotEvent_UnknowRobotEventType
}

func (x *RobotEvent) GetExtendData() *RobotEvent_ExtendData {
	if x != nil {
		return x.ExtendData
	}
	return nil
}

func (x *RobotEvent) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RobotEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RobotEvent) GetSendAt() int64 {
	if x != nil {
		return x.SendAt
	}
	return 0
}

type RobotTemplate_Param struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc string `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"` // 参数描述
}

func (x *RobotTemplate_Param) Reset() {
	*x = RobotTemplate_Param{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotTemplate_Param) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotTemplate_Param) ProtoMessage() {}

func (x *RobotTemplate_Param) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotTemplate_Param.ProtoReflect.Descriptor instead.
func (*RobotTemplate_Param) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RobotTemplate_Param) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type RobotTemplate_Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`     // 指令名称
	Desc   string                 `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`     // 指令描述
	Params []*RobotTemplate_Param `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty"` // 指令参数
}

func (x *RobotTemplate_Command) Reset() {
	*x = RobotTemplate_Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotTemplate_Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotTemplate_Command) ProtoMessage() {}

func (x *RobotTemplate_Command) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotTemplate_Command.ProtoReflect.Descriptor instead.
func (*RobotTemplate_Command) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{0, 1}
}

func (x *RobotTemplate_Command) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RobotTemplate_Command) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RobotTemplate_Command) GetParams() []*RobotTemplate_Param {
	if x != nil {
		return x.Params
	}
	return nil
}

type RobotTemplate_CustomSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // 自定义设置项名称
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`   // 自定义设置项页面
}

func (x *RobotTemplate_CustomSetting) Reset() {
	*x = RobotTemplate_CustomSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotTemplate_CustomSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotTemplate_CustomSetting) ProtoMessage() {}

func (x *RobotTemplate_CustomSetting) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotTemplate_CustomSetting.ProtoReflect.Descriptor instead.
func (*RobotTemplate_CustomSetting) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{0, 2}
}

func (x *RobotTemplate_CustomSetting) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RobotTemplate_CustomSetting) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type RobotEvent_ExtendData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to EventData:
	//
	//	*RobotEvent_ExtendData_JoinVilla
	//	*RobotEvent_ExtendData_SendMessage
	//	*RobotEvent_ExtendData_CreateRobot
	//	*RobotEvent_ExtendData_DeleteRobot
	//	*RobotEvent_ExtendData_AddQuickEmoticon
	//	*RobotEvent_ExtendData_AuditCallback
	//	*RobotEvent_ExtendData_ClickMsgComponent
	EventData isRobotEvent_ExtendData_EventData `protobuf_oneof:"event_data"`
}

func (x *RobotEvent_ExtendData) Reset() {
	*x = RobotEvent_ExtendData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotEvent_ExtendData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotEvent_ExtendData) ProtoMessage() {}

func (x *RobotEvent_ExtendData) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotEvent_ExtendData.ProtoReflect.Descriptor instead.
func (*RobotEvent_ExtendData) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{3, 0}
}

func (m *RobotEvent_ExtendData) GetEventData() isRobotEvent_ExtendData_EventData {
	if m != nil {
		return m.EventData
	}
	return nil
}

func (x *RobotEvent_ExtendData) GetJoinVilla() *RobotEvent_ExtendData_JoinVillaInfo {
	if x, ok := x.GetEventData().(*RobotEvent_ExtendData_JoinVilla); ok {
		return x.JoinVilla
	}
	return nil
}

func (x *RobotEvent_ExtendData) GetSendMessage() *RobotEvent_ExtendData_SendMessageInfo {
	if x, ok := x.GetEventData().(*RobotEvent_ExtendData_SendMessage); ok {
		return x.SendMessage
	}
	return nil
}

func (x *RobotEvent_ExtendData) GetCreateRobot() *RobotEvent_ExtendData_CreateRobotInfo {
	if x, ok := x.GetEventData().(*RobotEvent_ExtendData_CreateRobot); ok {
		return x.CreateRobot
	}
	return nil
}

func (x *RobotEvent_ExtendData) GetDeleteRobot() *RobotEvent_ExtendData_DeleteRobotInfo {
	if x, ok := x.GetEventData().(*RobotEvent_ExtendData_DeleteRobot); ok {
		return x.DeleteRobot
	}
	return nil
}

func (x *RobotEvent_ExtendData) GetAddQuickEmoticon() *RobotEvent_ExtendData_AddQuickEmoticonInfo {
	if x, ok := x.GetEventData().(*RobotEvent_ExtendData_AddQuickEmoticon); ok {
		return x.AddQuickEmoticon
	}
	return nil
}

func (x *RobotEvent_ExtendData) GetAuditCallback() *RobotEvent_ExtendData_AuditCallbackInfo {
	if x, ok := x.GetEventData().(*RobotEvent_ExtendData_AuditCallback); ok {
		return x.AuditCallback
	}
	return nil
}

func (x *RobotEvent_ExtendData) GetClickMsgComponent() *RobotEvent_ExtendData_ClickMsgComponentInfo {
	if x, ok := x.GetEventData().(*RobotEvent_ExtendData_ClickMsgComponent); ok {
		return x.ClickMsgComponent
	}
	return nil
}

type isRobotEvent_ExtendData_EventData interface {
	isRobotEvent_ExtendData_EventData()
}

type RobotEvent_ExtendData_JoinVilla struct {
	JoinVilla *RobotEvent_ExtendData_JoinVillaInfo `protobuf:"bytes,1,opt,name=join_villa,json=joinVilla,proto3,oneof"` // 加入大别野扩展信息
}

type RobotEvent_ExtendData_SendMessage struct {
	SendMessage *RobotEvent_ExtendData_SendMessageInfo `protobuf:"bytes,2,opt,name=send_message,json=sendMessage,proto3,oneof"` // 发送消息扩展信息
}

type RobotEvent_ExtendData_CreateRobot struct {
	CreateRobot *RobotEvent_ExtendData_CreateRobotInfo `protobuf:"bytes,3,opt,name=create_robot,json=createRobot,proto3,oneof"` // 添加机器人扩展信息
}

type RobotEvent_ExtendData_DeleteRobot struct {
	DeleteRobot *RobotEvent_ExtendData_DeleteRobotInfo `protobuf:"bytes,4,opt,name=delete_robot,json=deleteRobot,proto3,oneof"` // 删除机器人扩展信息
}

type RobotEvent_ExtendData_AddQuickEmoticon struct {
	AddQuickEmoticon *RobotEvent_ExtendData_AddQuickEmoticonInfo `protobuf:"bytes,5,opt,name=add_quick_emoticon,json=addQuickEmoticon,proto3,oneof"` // 表情表态扩展信息
}

type RobotEvent_ExtendData_AuditCallback struct {
	AuditCallback *RobotEvent_ExtendData_AuditCallbackInfo `protobuf:"bytes,6,opt,name=audit_callback,json=auditCallback,proto3,oneof"` // 审核回调信息
}

type RobotEvent_ExtendData_ClickMsgComponent struct {
	ClickMsgComponent *RobotEvent_ExtendData_ClickMsgComponentInfo `protobuf:"bytes,7,opt,name=click_msg_component,json=clickMsgComponent,proto3,oneof"` // 点击消息组件回传
}

func (*RobotEvent_ExtendData_JoinVilla) isRobotEvent_ExtendData_EventData() {}

func (*RobotEvent_ExtendData_SendMessage) isRobotEvent_ExtendData_EventData() {}

func (*RobotEvent_ExtendData_CreateRobot) isRobotEvent_ExtendData_EventData() {}

func (*RobotEvent_ExtendData_DeleteRobot) isRobotEvent_ExtendData_EventData() {}

func (*RobotEvent_ExtendData_AddQuickEmoticon) isRobotEvent_ExtendData_EventData() {}

func (*RobotEvent_ExtendData_AuditCallback) isRobotEvent_ExtendData_EventData() {}

func (*RobotEvent_ExtendData_ClickMsgComponent) isRobotEvent_ExtendData_EventData() {}

type RobotEvent_ExtendData_JoinVillaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JoinUid          uint64 `protobuf:"varint,1,opt,name=join_uid,json=joinUid,proto3" json:"join_uid,omitempty"`                             // 加入用户 uid
	JoinUserNickname string `protobuf:"bytes,2,opt,name=join_user_nickname,json=joinUserNickname,proto3" json:"join_user_nickname,omitempty"` // 加入用户昵称
	JoinAt           int64  `protobuf:"varint,3,opt,name=join_at,json=joinAt,proto3" json:"join_at,omitempty"`                                // 加入时间 [待废弃, 可以改用 RobotEvent.created_at]
	VillaId          uint64 `protobuf:"varint,4,opt,name=villa_id,json=villaId,proto3" json:"villa_id,omitempty"`                             // 大别野 id
}

func (x *RobotEvent_ExtendData_JoinVillaInfo) Reset() {
	*x = RobotEvent_ExtendData_JoinVillaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotEvent_ExtendData_JoinVillaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotEvent_ExtendData_JoinVillaInfo) ProtoMessage() {}

func (x *RobotEvent_ExtendData_JoinVillaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotEvent_ExtendData_JoinVillaInfo.ProtoReflect.Descriptor instead.
func (*RobotEvent_ExtendData_JoinVillaInfo) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *RobotEvent_ExtendData_JoinVillaInfo) GetJoinUid() uint64 {
	if x != nil {
		return x.JoinUid
	}
	return 0
}

func (x *RobotEvent_ExtendData_JoinVillaInfo) GetJoinUserNickname() string {
	if x != nil {
		return x.JoinUserNickname
	}
	return ""
}

func (x *RobotEvent_ExtendData_JoinVillaInfo) GetJoinAt() int64 {
	if x != nil {
		return x.JoinAt
	}
	return 0
}

func (x *RobotEvent_ExtendData_JoinVillaInfo) GetVillaId() uint64 {
	if x != nil {
		return x.VillaId
	}
	return 0
}

type RobotEvent_ExtendData_SendMessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content    string            `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`                                                   // 消息内容
	FromUserId uint64            `protobuf:"varint,2,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`                        // 发送人 uid
	SendAt     int64             `protobuf:"varint,3,opt,name=send_at,json=sendAt,proto3" json:"send_at,omitempty"`                                      // 发送时间 [待废弃, 可以改用 RobotEvent.created_at]
	ObjectName ObjectName        `protobuf:"varint,4,opt,name=object_name,json=objectName,proto3,enum=vila_bot.ObjectName" json:"object_name,omitempty"` // 消息类型
	RoomId     uint64            `protobuf:"varint,5,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                                      // 房间 id
	Nickname   string            `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname,omitempty"`                                                 // 昵称
	MsgUid     string            `protobuf:"bytes,7,opt,name=msg_uid,json=msgUid,proto3" json:"msg_uid,omitempty"`                                       // 消息 id
	BotMsgId   string            `protobuf:"bytes,8,opt,name=bot_msg_id,json=botMsgId,proto3" json:"bot_msg_id,omitempty"`                               // 如果被回复的消息从属于机器人，则该字段不为空字符串
	VillaId    uint64            `protobuf:"varint,9,opt,name=villa_id,json=villaId,proto3" json:"villa_id,omitempty"`                                   // 大别野 id
	QuoteMsg   *QuoteMessageInfo `protobuf:"bytes,10,opt,name=quote_msg,json=quoteMsg,proto3" json:"quote_msg,omitempty"`                                // 引用消息的内容
}

func (x *RobotEvent_ExtendData_SendMessageInfo) Reset() {
	*x = RobotEvent_ExtendData_SendMessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotEvent_ExtendData_SendMessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotEvent_ExtendData_SendMessageInfo) ProtoMessage() {}

func (x *RobotEvent_ExtendData_SendMessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotEvent_ExtendData_SendMessageInfo.ProtoReflect.Descriptor instead.
func (*RobotEvent_ExtendData_SendMessageInfo) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{3, 0, 1}
}

func (x *RobotEvent_ExtendData_SendMessageInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RobotEvent_ExtendData_SendMessageInfo) GetFromUserId() uint64 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

func (x *RobotEvent_ExtendData_SendMessageInfo) GetSendAt() int64 {
	if x != nil {
		return x.SendAt
	}
	return 0
}

func (x *RobotEvent_ExtendData_SendMessageInfo) GetObjectName() ObjectName {
	if x != nil {
		return x.ObjectName
	}
	return ObjectName_UnknowObjectName
}

func (x *RobotEvent_ExtendData_SendMessageInfo) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *RobotEvent_ExtendData_SendMessageInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *RobotEvent_ExtendData_SendMessageInfo) GetMsgUid() string {
	if x != nil {
		return x.MsgUid
	}
	return ""
}

func (x *RobotEvent_ExtendData_SendMessageInfo) GetBotMsgId() string {
	if x != nil {
		return x.BotMsgId
	}
	return ""
}

func (x *RobotEvent_ExtendData_SendMessageInfo) GetVillaId() uint64 {
	if x != nil {
		return x.VillaId
	}
	return 0
}

func (x *RobotEvent_ExtendData_SendMessageInfo) GetQuoteMsg() *QuoteMessageInfo {
	if x != nil {
		return x.QuoteMsg
	}
	return nil
}

type RobotEvent_ExtendData_CreateRobotInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VillaId uint64 `protobuf:"varint,1,opt,name=villa_id,json=villaId,proto3" json:"villa_id,omitempty"` // 创建机器人实例的大别野 id
}

func (x *RobotEvent_ExtendData_CreateRobotInfo) Reset() {
	*x = RobotEvent_ExtendData_CreateRobotInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotEvent_ExtendData_CreateRobotInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotEvent_ExtendData_CreateRobotInfo) ProtoMessage() {}

func (x *RobotEvent_ExtendData_CreateRobotInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotEvent_ExtendData_CreateRobotInfo.ProtoReflect.Descriptor instead.
func (*RobotEvent_ExtendData_CreateRobotInfo) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{3, 0, 2}
}

func (x *RobotEvent_ExtendData_CreateRobotInfo) GetVillaId() uint64 {
	if x != nil {
		return x.VillaId
	}
	return 0
}

type RobotEvent_ExtendData_DeleteRobotInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VillaId uint64 `protobuf:"varint,1,opt,name=villa_id,json=villaId,proto3" json:"villa_id,omitempty"`
}

func (x *RobotEvent_ExtendData_DeleteRobotInfo) Reset() {
	*x = RobotEvent_ExtendData_DeleteRobotInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotEvent_ExtendData_DeleteRobotInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotEvent_ExtendData_DeleteRobotInfo) ProtoMessage() {}

func (x *RobotEvent_ExtendData_DeleteRobotInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotEvent_ExtendData_DeleteRobotInfo.ProtoReflect.Descriptor instead.
func (*RobotEvent_ExtendData_DeleteRobotInfo) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{3, 0, 3}
}

func (x *RobotEvent_ExtendData_DeleteRobotInfo) GetVillaId() uint64 {
	if x != nil {
		return x.VillaId
	}
	return 0
}

type RobotEvent_ExtendData_AddQuickEmoticonInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VillaId      uint64 `protobuf:"varint,1,opt,name=villa_id,json=villaId,proto3" json:"villa_id,omitempty"`                // 大别野 id
	RoomId       uint64 `protobuf:"varint,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                   // 房间 id
	Uid          uint64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`                                       // 回复用户 id
	EmoticonId   uint32 `protobuf:"varint,4,opt,name=emoticon_id,json=emoticonId,proto3" json:"emoticon_id,omitempty"`       // 表情 id
	Emoticon     string `protobuf:"bytes,5,opt,name=emoticon,proto3" json:"emoticon,omitempty"`                              // 表情
	MsgUid       string `protobuf:"bytes,6,opt,name=msg_uid,json=msgUid,proto3" json:"msg_uid,omitempty"`                    // 消息 id
	IsCancel     bool   `protobuf:"varint,7,opt,name=is_cancel,json=isCancel,proto3" json:"is_cancel,omitempty"`             // 是否是取消表情
	BotMsgId     string `protobuf:"bytes,8,opt,name=bot_msg_id,json=botMsgId,proto3" json:"bot_msg_id,omitempty"`            // 如果被回复的消息从属于机器人，则该字段不为空字符串
	EmoticonType uint32 `protobuf:"varint,9,opt,name=emoticon_type,json=emoticonType,proto3" json:"emoticon_type,omitempty"` // 表情类型
}

func (x *RobotEvent_ExtendData_AddQuickEmoticonInfo) Reset() {
	*x = RobotEvent_ExtendData_AddQuickEmoticonInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotEvent_ExtendData_AddQuickEmoticonInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotEvent_ExtendData_AddQuickEmoticonInfo) ProtoMessage() {}

func (x *RobotEvent_ExtendData_AddQuickEmoticonInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotEvent_ExtendData_AddQuickEmoticonInfo.ProtoReflect.Descriptor instead.
func (*RobotEvent_ExtendData_AddQuickEmoticonInfo) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{3, 0, 4}
}

func (x *RobotEvent_ExtendData_AddQuickEmoticonInfo) GetVillaId() uint64 {
	if x != nil {
		return x.VillaId
	}
	return 0
}

func (x *RobotEvent_ExtendData_AddQuickEmoticonInfo) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *RobotEvent_ExtendData_AddQuickEmoticonInfo) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RobotEvent_ExtendData_AddQuickEmoticonInfo) GetEmoticonId() uint32 {
	if x != nil {
		return x.EmoticonId
	}
	return 0
}

func (x *RobotEvent_ExtendData_AddQuickEmoticonInfo) GetEmoticon() string {
	if x != nil {
		return x.Emoticon
	}
	return ""
}

func (x *RobotEvent_ExtendData_AddQuickEmoticonInfo) GetMsgUid() string {
	if x != nil {
		return x.MsgUid
	}
	return ""
}

func (x *RobotEvent_ExtendData_AddQuickEmoticonInfo) GetIsCancel() bool {
	if x != nil {
		return x.IsCancel
	}
	return false
}

func (x *RobotEvent_ExtendData_AddQuickEmoticonInfo) GetBotMsgId() string {
	if x != nil {
		return x.BotMsgId
	}
	return ""
}

func (x *RobotEvent_ExtendData_AddQuickEmoticonInfo) GetEmoticonType() uint32 {
	if x != nil {
		return x.EmoticonType
	}
	return 0
}

type RobotEvent_ExtendData_AuditCallbackInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuditId     string                                              `protobuf:"bytes,1,opt,name=audit_id,json=auditId,proto3" json:"audit_id,omitempty"`                                                                                // 机器人平台审核事件 id
	BotTplId    string                                              `protobuf:"bytes,2,opt,name=bot_tpl_id,json=botTplId,proto3" json:"bot_tpl_id,omitempty"`                                                                           // 机器人 id
	VillaId     uint64                                              `protobuf:"varint,3,opt,name=villa_id,json=villaId,proto3" json:"villa_id,omitempty"`                                                                               // 大别野 id
	RoomId      uint64                                              `protobuf:"varint,4,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                                                                                  // 房间 id
	UserId      uint64                                              `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                                                  // 用户 id
	PassThrough string                                              `protobuf:"bytes,6,opt,name=pass_through,json=passThrough,proto3" json:"pass_through,omitempty"`                                                                    // 透传字段
	AuditResult RobotEvent_ExtendData_AuditCallbackInfo_AuditResult `protobuf:"varint,7,opt,name=audit_result,json=auditResult,proto3,enum=vila_bot.RobotEvent_ExtendData_AuditCallbackInfo_AuditResult" json:"audit_result,omitempty"` // 审核结果
}

func (x *RobotEvent_ExtendData_AuditCallbackInfo) Reset() {
	*x = RobotEvent_ExtendData_AuditCallbackInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotEvent_ExtendData_AuditCallbackInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotEvent_ExtendData_AuditCallbackInfo) ProtoMessage() {}

func (x *RobotEvent_ExtendData_AuditCallbackInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotEvent_ExtendData_AuditCallbackInfo.ProtoReflect.Descriptor instead.
func (*RobotEvent_ExtendData_AuditCallbackInfo) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{3, 0, 5}
}

func (x *RobotEvent_ExtendData_AuditCallbackInfo) GetAuditId() string {
	if x != nil {
		return x.AuditId
	}
	return ""
}

func (x *RobotEvent_ExtendData_AuditCallbackInfo) GetBotTplId() string {
	if x != nil {
		return x.BotTplId
	}
	return ""
}

func (x *RobotEvent_ExtendData_AuditCallbackInfo) GetVillaId() uint64 {
	if x != nil {
		return x.VillaId
	}
	return 0
}

func (x *RobotEvent_ExtendData_AuditCallbackInfo) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *RobotEvent_ExtendData_AuditCallbackInfo) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RobotEvent_ExtendData_AuditCallbackInfo) GetPassThrough() string {
	if x != nil {
		return x.PassThrough
	}
	return ""
}

func (x *RobotEvent_ExtendData_AuditCallbackInfo) GetAuditResult() RobotEvent_ExtendData_AuditCallbackInfo_AuditResult {
	if x != nil {
		return x.AuditResult
	}
	return RobotEvent_ExtendData_AuditCallbackInfo_None
}

type RobotEvent_ExtendData_ClickMsgComponentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VillaId     uint64 `protobuf:"varint,1,opt,name=villa_id,json=villaId,proto3" json:"villa_id,omitempty"`
	RoomId      uint64 `protobuf:"varint,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ComponentId string `protobuf:"bytes,3,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // 自定义组件id
	MsgUid      string `protobuf:"bytes,4,opt,name=msg_uid,json=msgUid,proto3" json:"msg_uid,omitempty"`
	Uid         uint64 `protobuf:"varint,5,opt,name=uid,proto3" json:"uid,omitempty"`
	BotMsgId    string `protobuf:"bytes,6,opt,name=bot_msg_id,json=botMsgId,proto3" json:"bot_msg_id,omitempty"`
	TemplateId  uint64 `protobuf:"varint,7,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"` // 模板id
	Extra       string `protobuf:"bytes,8,opt,name=extra,proto3" json:"extra,omitempty"`                              // 机器人自定义透传数据
}

func (x *RobotEvent_ExtendData_ClickMsgComponentInfo) Reset() {
	*x = RobotEvent_ExtendData_ClickMsgComponentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotEvent_ExtendData_ClickMsgComponentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotEvent_ExtendData_ClickMsgComponentInfo) ProtoMessage() {}

func (x *RobotEvent_ExtendData_ClickMsgComponentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotEvent_ExtendData_ClickMsgComponentInfo.ProtoReflect.Descriptor instead.
func (*RobotEvent_ExtendData_ClickMsgComponentInfo) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{3, 0, 6}
}

func (x *RobotEvent_ExtendData_ClickMsgComponentInfo) GetVillaId() uint64 {
	if x != nil {
		return x.VillaId
	}
	return 0
}

func (x *RobotEvent_ExtendData_ClickMsgComponentInfo) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *RobotEvent_ExtendData_ClickMsgComponentInfo) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *RobotEvent_ExtendData_ClickMsgComponentInfo) GetMsgUid() string {
	if x != nil {
		return x.MsgUid
	}
	return ""
}

func (x *RobotEvent_ExtendData_ClickMsgComponentInfo) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RobotEvent_ExtendData_ClickMsgComponentInfo) GetBotMsgId() string {
	if x != nil {
		return x.BotMsgId
	}
	return ""
}

func (x *RobotEvent_ExtendData_ClickMsgComponentInfo) GetTemplateId() uint64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *RobotEvent_ExtendData_ClickMsgComponentInfo) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

var File_model_proto protoreflect.FileDescriptor

var file_model_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x76,
	0x69, 0x6c, 0x61, 0x5f, 0x62, 0x6f, 0x74, 0x22, 0xe7, 0x03, 0x0a, 0x0d, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x69, 0x6c, 0x61, 0x5f, 0x62,
	0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x12, 0x4e, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x76, 0x69,
	0x6c, 0x61, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x3f, 0x0a, 0x1d, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x5f, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x76, 0x69,
	0x6c, 0x6c, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x69, 0x73, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x56, 0x69,
	0x6c, 0x6c, 0x61, 0x1a, 0x1b, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x1a, 0x68, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x35, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x69, 0x6c, 0x61, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x35, 0x0a, 0x0d, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x22, 0x57, 0x0a, 0x05, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76,
	0x69, 0x6c, 0x61, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x49, 0x64, 0x22, 0x90, 0x02, 0x0a, 0x10, 0x51,
	0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x55,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x62, 0x6f, 0x74, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x74, 0x4d,
	0x73, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x53, 0x74, 0x72, 0x12,
	0x2c, 0x0a, 0x12, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x72, 0x6f,
	0x6d, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd6, 0x13,
	0x0a, 0x0a, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x05,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x69,
	0x6c, 0x61, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x05, 0x72, 0x6f,
	0x62, 0x6f, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x76, 0x69, 0x6c, 0x61, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76,
	0x69, 0x6c, 0x61, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x41,
	0x74, 0x1a, 0xb8, 0x10, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x4e, 0x0a, 0x0a, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x76, 0x69, 0x6c, 0x61, 0x5f, 0x62, 0x6f, 0x74, 0x2e,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x56, 0x69, 0x6c, 0x6c, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x56, 0x69, 0x6c, 0x6c, 0x61,
	0x12, 0x54, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x76, 0x69, 0x6c, 0x61, 0x5f, 0x62, 0x6f,
	0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x54, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x76,
	0x69, 0x6c, 0x61, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x54, 0x0a, 0x0c,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x76, 0x69, 0x6c, 0x61, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x12, 0x64, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x5f, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f,
	0x65, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x76, 0x69, 0x6c, 0x61, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x41, 0x64, 0x64, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x10, 0x61, 0x64, 0x64, 0x51, 0x75, 0x69, 0x63, 0x6b,
	0x45, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x5a, 0x0a, 0x0e, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x76, 0x69, 0x6c, 0x61, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x67, 0x0a, 0x13, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x76, 0x69, 0x6c, 0x61, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x63,
	0x6b, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x1a, 0x8c, 0x01,
	0x0a, 0x0d, 0x4a, 0x6f, 0x69, 0x6e, 0x56, 0x69, 0x6c, 0x6c, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x6a, 0x6f, 0x69, 0x6e, 0x55, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6a, 0x6f,
	0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6a, 0x6f, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6a, 0x6f, 0x69, 0x6e,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x41,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x49, 0x64, 0x1a, 0xdd, 0x02, 0x0a,
	0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x76, 0x69, 0x6c,
	0x61, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x55, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x62, 0x6f,
	0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x6f, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x6c, 0x6c,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x69, 0x6c, 0x6c,
	0x61, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x73, 0x67,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x69, 0x6c, 0x61, 0x5f, 0x62, 0x6f,
	0x74, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x1a, 0x2c, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x19, 0x0a, 0x08, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x49, 0x64, 0x1a, 0x2c, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a,
	0x08, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x49, 0x64, 0x1a, 0x92, 0x02, 0x0a, 0x14, 0x41, 0x64, 0x64,
	0x51, 0x75, 0x69, 0x63, 0x6b, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x6f, 0x74, 0x69,
	0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x6d,
	0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6d, 0x6f, 0x74,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6d, 0x6f, 0x74,
	0x69, 0x63, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x55, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x0a, 0x62, 0x6f,
	0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x6f, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x6f, 0x74,
	0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x1a, 0xcd, 0x02,
	0x0a, 0x11, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x0a, 0x62, 0x6f, 0x74, 0x5f, 0x74, 0x70, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x74, 0x54, 0x70, 0x6c, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x76, 0x69, 0x6c, 0x6c, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x76, 0x69, 0x6c, 0x6c, 0x61, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x73,
	0x73, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x61, 0x73, 0x73, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x12, 0x60, 0x0a, 0x0c,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x76, 0x69, 0x6c, 0x61, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2d,
	0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x61, 0x73, 0x73, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x02, 0x1a, 0xee, 0x01,
	0x0a, 0x15, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x6c, 0x6c, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x69, 0x6c, 0x6c, 0x61,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x73, 0x67, 0x55, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x62, 0x6f, 0x74,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x6f, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x42, 0x0c,
	0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa7, 0x01, 0x0a,
	0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x56, 0x69, 0x6c, 0x6c,
	0x61, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x51, 0x75, 0x69,
	0x63, 0x6b, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x10, 0x06, 0x12,
	0x15, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x10, 0x07, 0x2a, 0x62, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x6f, 0x6f, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x03, 0x2a, 0x36, 0x0a, 0x0a, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74,
	0x10, 0x02, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x6f, 0x70, 0x6b, 0x67, 0x2e, 0x6d, 0x69, 0x68, 0x6f,
	0x79, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x69, 0x6c, 0x61, 0x2d, 0x62, 0x6f, 0x74, 0x2d,
	0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x69, 0x6c, 0x61, 0x5f, 0x62, 0x6f,
	0x74, 0x3b, 0x76, 0x69, 0x6c, 0x61, 0x5f, 0x62, 0x6f, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_model_proto_rawDescOnce sync.Once
	file_model_proto_rawDescData = file_model_proto_rawDesc
)

func file_model_proto_rawDescGZIP() []byte {
	file_model_proto_rawDescOnce.Do(func() {
		file_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_proto_rawDescData)
	})
	return file_model_proto_rawDescData
}

var file_model_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_model_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_model_proto_goTypes = []interface{}{
	(RoomType)(0),             // 0: vila_bot.RoomType
	(ObjectName)(0),           // 1: vila_bot.ObjectName
	(RobotEvent_EventType)(0), // 2: vila_bot.RobotEvent.EventType
	(RobotEvent_ExtendData_AuditCallbackInfo_AuditResult)(0), // 3: vila_bot.RobotEvent.ExtendData.AuditCallbackInfo.AuditResult
	(*RobotTemplate)(nil),                               // 4: vila_bot.RobotTemplate
	(*Robot)(nil),                                       // 5: vila_bot.Robot
	(*QuoteMessageInfo)(nil),                            // 6: vila_bot.QuoteMessageInfo
	(*RobotEvent)(nil),                                  // 7: vila_bot.RobotEvent
	(*RobotTemplate_Param)(nil),                         // 8: vila_bot.RobotTemplate.Param
	(*RobotTemplate_Command)(nil),                       // 9: vila_bot.RobotTemplate.Command
	(*RobotTemplate_CustomSetting)(nil),                 // 10: vila_bot.RobotTemplate.CustomSetting
	(*RobotEvent_ExtendData)(nil),                       // 11: vila_bot.RobotEvent.ExtendData
	(*RobotEvent_ExtendData_JoinVillaInfo)(nil),         // 12: vila_bot.RobotEvent.ExtendData.JoinVillaInfo
	(*RobotEvent_ExtendData_SendMessageInfo)(nil),       // 13: vila_bot.RobotEvent.ExtendData.SendMessageInfo
	(*RobotEvent_ExtendData_CreateRobotInfo)(nil),       // 14: vila_bot.RobotEvent.ExtendData.CreateRobotInfo
	(*RobotEvent_ExtendData_DeleteRobotInfo)(nil),       // 15: vila_bot.RobotEvent.ExtendData.DeleteRobotInfo
	(*RobotEvent_ExtendData_AddQuickEmoticonInfo)(nil),  // 16: vila_bot.RobotEvent.ExtendData.AddQuickEmoticonInfo
	(*RobotEvent_ExtendData_AuditCallbackInfo)(nil),     // 17: vila_bot.RobotEvent.ExtendData.AuditCallbackInfo
	(*RobotEvent_ExtendData_ClickMsgComponentInfo)(nil), // 18: vila_bot.RobotEvent.ExtendData.ClickMsgComponentInfo
}
var file_model_proto_depIdxs = []int32{
	9,  // 0: vila_bot.RobotTemplate.commands:type_name -> vila_bot.RobotTemplate.Command
	10, // 1: vila_bot.RobotTemplate.custom_settings:type_name -> vila_bot.RobotTemplate.CustomSetting
	4,  // 2: vila_bot.Robot.template:type_name -> vila_bot.RobotTemplate
	5,  // 3: vila_bot.RobotEvent.robot:type_name -> vila_bot.Robot
	2,  // 4: vila_bot.RobotEvent.type:type_name -> vila_bot.RobotEvent.EventType
	11, // 5: vila_bot.RobotEvent.extend_data:type_name -> vila_bot.RobotEvent.ExtendData
	8,  // 6: vila_bot.RobotTemplate.Command.params:type_name -> vila_bot.RobotTemplate.Param
	12, // 7: vila_bot.RobotEvent.ExtendData.join_villa:type_name -> vila_bot.RobotEvent.ExtendData.JoinVillaInfo
	13, // 8: vila_bot.RobotEvent.ExtendData.send_message:type_name -> vila_bot.RobotEvent.ExtendData.SendMessageInfo
	14, // 9: vila_bot.RobotEvent.ExtendData.create_robot:type_name -> vila_bot.RobotEvent.ExtendData.CreateRobotInfo
	15, // 10: vila_bot.RobotEvent.ExtendData.delete_robot:type_name -> vila_bot.RobotEvent.ExtendData.DeleteRobotInfo
	16, // 11: vila_bot.RobotEvent.ExtendData.add_quick_emoticon:type_name -> vila_bot.RobotEvent.ExtendData.AddQuickEmoticonInfo
	17, // 12: vila_bot.RobotEvent.ExtendData.audit_callback:type_name -> vila_bot.RobotEvent.ExtendData.AuditCallbackInfo
	18, // 13: vila_bot.RobotEvent.ExtendData.click_msg_component:type_name -> vila_bot.RobotEvent.ExtendData.ClickMsgComponentInfo
	1,  // 14: vila_bot.RobotEvent.ExtendData.SendMessageInfo.object_name:type_name -> vila_bot.ObjectName
	6,  // 15: vila_bot.RobotEvent.ExtendData.SendMessageInfo.quote_msg:type_name -> vila_bot.QuoteMessageInfo
	3,  // 16: vila_bot.RobotEvent.ExtendData.AuditCallbackInfo.audit_result:type_name -> vila_bot.RobotEvent.ExtendData.AuditCallbackInfo.AuditResult
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_model_proto_init() }
func file_model_proto_init() {
	if File_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Robot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteMessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotTemplate_Param); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotTemplate_Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotTemplate_CustomSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotEvent_ExtendData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotEvent_ExtendData_JoinVillaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotEvent_ExtendData_SendMessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotEvent_ExtendData_CreateRobotInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotEvent_ExtendData_DeleteRobotInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotEvent_ExtendData_AddQuickEmoticonInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotEvent_ExtendData_AuditCallbackInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotEvent_ExtendData_ClickMsgComponentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_model_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*RobotEvent_ExtendData_JoinVilla)(nil),
		(*RobotEvent_ExtendData_SendMessage)(nil),
		(*RobotEvent_ExtendData_CreateRobot)(nil),
		(*RobotEvent_ExtendData_DeleteRobot)(nil),
		(*RobotEvent_ExtendData_AddQuickEmoticon)(nil),
		(*RobotEvent_ExtendData_AuditCallback)(nil),
		(*RobotEvent_ExtendData_ClickMsgComponent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_proto_goTypes,
		DependencyIndexes: file_model_proto_depIdxs,
		EnumInfos:         file_model_proto_enumTypes,
		MessageInfos:      file_model_proto_msgTypes,
	}.Build()
	File_model_proto = out.File
	file_model_proto_rawDesc = nil
	file_model_proto_goTypes = nil
	file_model_proto_depIdxs = nil
}
